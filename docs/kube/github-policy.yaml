apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: heighliner:github-repository
rules:
  - apiGroups: ["hlnr.io"]
    resources:
    - "githubrepositories"
    verbs: ["*"]
  - apiGroups: ["hlnr.io"]
    resources:
    - "microservices"
    - "networkpolicies"
    - "imagepolicies"
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["*"]
  - apiGroups:  [""]
    resources:
    - "secrets"
    verbs: ["get", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: heighliner:github-repository
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: heighliner:github-repository
subjects:
  - name: heighliner-github-repository
    namespace: hlnr-system
    kind: ServiceAccount

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: heighliner-github-repository
  namespace: hlnr-system

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: github-repository-controller
  namespace: hlnr-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: github-repository-controller
    spec:
      serviceAccountName: heighliner-github-repository
      containers:
        - name: github-repository-controller
          image: arigato/heighliner:{{.Version}}
          imagePullPolicy: Never
          args:
          - github-repository-controller
          env:
            - name: DOMAIN
              value: {{.GitHubCallbackDomain}}
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          readinessProbe:
            httpGet:
              path: /_healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /_healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3

---

apiVersion: v1
kind: Service
metadata:
  labels:
    service: github-repository-controller
  name: github-repository-controller
  namespace: hlnr-system
spec:
  type: NodePort
  ports:
  - name: headless
    port: 80
    targetPort: 8080
  selector:
    app: github-repository-controller
status:
  loadBalancer: {}

---

apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: github-callback-tls
  namespace: hlnr-system
spec:
  secretName: github-callback-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: '{{.GitHubCallbackDomain}}'
  acme:
    config:
    - dns01:
        provider: {{.DNSProvider}}
      domains:
      - '{{.GitHubCallbackDomain}}'

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: github-repository-controller
  namespace: hlnr-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    external-dns.alpha.kubernetes.io/hostname: {{.GitHubCallbackDomain}}.
    external-dns.alpha.kubernetes.io/ttl: "300"
spec:
  tls:
  - hosts:
    - {{.GitHubCallbackDomain}}
    secretName: github-callback-tls
  rules:
  - host: {{.GitHubCallbackDomain}}
    http:
      paths:
      - path: /
        backend:
          serviceName: github-repository-controller
          servicePort: 80
